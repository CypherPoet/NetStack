#if !canImport(ObjectiveC)
import XCTest

extension EndpointTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__EndpointTests = [
        ("test_init_setsDefaultScheme", test_init_setsDefaultScheme),
        ("test_init_withBadPath_computesNoURL", test_init_withBadPath_computesNoURL),
        ("test_init_withHostAndPath_computesURL", test_init_withHostAndPath_computesURL),
    ]
}

extension ModelTransportRequestPublishingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ModelTransportRequestPublishingTests = [
        ("test_encodeDataForModel", test_encodeDataForModel),
        ("test_sendEncodedDataForModelintoBodyOfRequest", test_sendEncodedDataForModelintoBodyOfRequest),
    ]
}

extension NetworkResponseTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NetworkResponseTests = [
        ("testNetworkResponse_message_usesLocalizedStringForStatusCode", testNetworkResponse_message_usesLocalizedStringForStatusCode),
        ("testNetworkResponse_status_usesResponseStatusCode", testNetworkResponse_status_usesResponseStatusCode),
    ]
}

extension TransportRequestPublishingTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__TransportRequestPublishingTests = [
        ("testBareRequestPublisher_whenCreated_setsDefaultSubscriptionQueue", testBareRequestPublisher_whenCreated_setsDefaultSubscriptionQueue),
        ("testCustomizedRequestPublisher_whenCreated_setsCustomSubscriptionQueue", testCustomizedRequestPublisher_whenCreated_setsCustomSubscriptionQueue),
        ("testRequestPublisher_perform_givenFailingGETForData_publishesNetworkResponseWithBody", testRequestPublisher_perform_givenFailingGETForData_publishesNetworkResponseWithBody),
        ("testRequestPublisher_perform_givenSuccess_publishesNetworkResponse", testRequestPublisher_perform_givenSuccess_publishesNetworkResponse),
        ("testRequestPublisher_perform_givenSuccessfulGETForData_publishesNetworkResponseWithBody", testRequestPublisher_perform_givenSuccessfulGETForData_publishesNetworkResponseWithBody),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(EndpointTests.__allTests__EndpointTests),
        testCase(ModelTransportRequestPublishingTests.__allTests__ModelTransportRequestPublishingTests),
        testCase(NetworkResponseTests.__allTests__NetworkResponseTests),
        testCase(TransportRequestPublishingTests.__allTests__TransportRequestPublishingTests),
    ]
}
#endif
